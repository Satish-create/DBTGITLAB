# Globals defined at the bottom of the file

# Job Templates

.job_template: &job_definition
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  tags:
    - analytics

.job_housekeeping: &job_housekeeping
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  tags:
    - housekeeping

.marketo_extract: &marketo_extract
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "bash transform/mkto_processor.sh"

.zendesk_extract: &zendesk_extract
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/zendesk/src --schema zendesk apply_schema"
    - ci_helpers.py use_proxy "python3 extract/zendesk/src --schema zendesk --days=1 export"

.lever_extract: &lever_extract
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/lever/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 extract/lever/src --schema lever apply_schema"
    - ci_helpers.py use_proxy "python3 extract/lever/src --schema lever --days=7 export"
    - ci_helpers.py use_proxy "python3 extract/lever/src --schema lever --days=365 --only_offers export"

.ci_stats: &ci_stats
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_ci_stats.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest ci_stats"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest ci_stats --hours 8"

.netsuite_extract: &netsuite_extract
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/netsuite/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 extract/netsuite/src/ --schema netsuite apply_schema"
    - ci_helpers.py use_proxy "python3 extract/netsuite/src/ --schema netsuite export --days 3"
    - ci_helpers.py use_proxy "python3 extract/netsuite/src/ --schema netsuite backlog --days 15"

.netsuite_backlog: &netsuite_backlog
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/netsuite/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 extract/netsuite/src/ --schema netsuite backlog --days 60"

.pings_extract: &pings_extract
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest version --days 1"
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest customers"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest customers --days 1"
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest license"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest license --days 1"

.pings_backfill: &pings_backfill
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest version"

.gitlab_profiler_extract: &gitlab_profiler_extract
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_gitlab_profiler.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest gitlab_profiler"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest gitlab_profiler --days 15"

.gitlab_profiler_backfill: &gitlab_profiler_backfill
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_gitlab_profiler.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest gitlab_profiler"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest gitlab_profiler --days 3600"

.spreadsheet_extract: &spreadsheet_extract
  stage: extract
  <<: *job_definition
  script:
    - pip3 install -U pyasn1-modules
    - ci_helpers.py use_proxy "python3 extract/util/spreadsheet_loader.py sheet historical.sales_quota.sales_quota historical.headcount.headcount historical.metrics.metrics historical.regional_quotas.transposed"

.zuora_extract: &zuora_extract
  variables:
    FIXED_ZUORA_PASSWORD: $ZUORA_PASSWORD
  stage: extract
  <<: *job_definition
  script:
    - envsubst < "extract/config/environment.conf.template" > "extract/config/environment.conf"
    - ci_helpers.py use_proxy "python3 extract/zuora/zuora_export.py"

.sfdc_extract: &sfdc_extract
  variables:
    FIXED_SFDC_PASSWORD: $SFDC_PASSWORD_NOTOKEN
  stage: extract
  <<: *job_definition
  script:
    - pip3 install salesforce-bulk # TODO: add me to the container
    - ci_helpers.py use_proxy "python3 extract/sfdc/src/ --schema sfdc apply_schema"
    - ci_helpers.py use_proxy "python3 extract/sfdc/src/ --schema sfdc export"

.domains_extract: &domains_extract
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "bash transform/hosts_to_sfdc/python_timecheck.sh"

.stripe_extract_githost: &stripe_extract_githost
  variables:
    GITHOST_STRIPE_API_KEY_SK: $GITHOST_STRIPE_API_KEY_SK
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/stripe/src --schema stripe_githost apply_schema"
    - ci_helpers.py use_proxy "python3 extract/stripe/src --schema stripe_githost --days=7 export"

.stripe_extract_about_gitlab: &stripe_extract_about_gitlab
  variables:
    ABOUT_GITLAB_STRIPE_API_KEY_SK: $ABOUT_GITLAB_STRIPE_API_KEY_SK
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/stripe/src --schema stripe_about_gitlab apply_schema"
    - ci_helpers.py use_proxy "python3 extract/stripe/src --schema stripe_about_gitlab --days=7 export"

.gitlab_extract: &gitlab_extract
  stage: extract
  retry: 1
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/gitlab/src -S gitlab apply_schema"
    - ci_helpers.py use_proxy "python3 extract/gitlab/src -S gitlab export"

# ---------------------------------------------------------------------------

# Stages
stages:
  - review
  - setup
  - extract
  - model
  - update
  - review_stop

# Stage: review

review: &review
  stage: review
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  variables:
    GIT_STRATEGY: clone
  tags:
    - analytics
  script:
    - ci_helpers.py manage_instances
  environment:
    name: review/$CI_COMMIT_REF_NAME
    on_stop: review_stop
  only:
    - branches
  except:
    - master

review_refresh:
  <<: *review
  variables:
    FORCE: "true"
  when: manual

# Stage: setup

refresh_dev: &refresh_dev
  <<: *job_housekeeping
  stage: setup
  variables:
    GCP_INSTANCE_NAME: $GCP_PRODUCTION_INSTANCE_NAME
    GIT_STRATEGY: clone
  script:
    - ci_helpers.py refresh_dev_instance
    - ci_helpers.py use_proxy "python3 orchestrate/grant_roles.py"
  only:
    refs:
      - master
    variables:
      - $REFRESH_DEV

force_refresh_dev:
  <<: *refresh_dev
  variables:
    GCP_INSTANCE_NAME: $GCP_PRODUCTION_INSTANCE_NAME
    GIT_DEPTH: 1
    FORCE: "true"
  when: manual

update_db: &update_db
  <<: *job_housekeeping
  stage: setup
  script:
    - ci_helpers.py use_proxy "python3 orchestrate/grant_roles.py"
  only:
    - branches
  except:
    - master

force_update_db:
  <<: *update_db
  when: manual

# Stage: extract
## Production Jobs

ci_stats:
  stage: extract
  <<: *ci_stats
  only:
    refs:
      - master
    variables:
      - $CI_STATS

domains:
  <<: *domains_extract
  only:
    refs:
      - master
    variables:
      - $DOMAINS

gitlab:
  <<: *gitlab_extract
  only:
    refs:
      - master
    variables:
      - $GITLAB

lever:
  <<: *lever_extract
  only:
    refs:
      - master
    variables:
      - $LEVER

marketo:
  <<: *marketo_extract
  only:
    refs:
      - master
    variables:
      - $MARKETO

netsuite:
  <<: *netsuite_extract
  only:
    refs:
      - master
    variables:
      - $NETSUITE

pings:
  stage: extract
  <<: *pings_extract
  only:
    refs:
      - master
    variables:
      - $PINGS

gitlab_profiler:
  stage: extract
  <<: *gitlab_profiler_extract
  only:
    refs:
      - master
    variables:
      - $GITLAB_PROFILER

sfdc:
  <<: *sfdc_extract
  only:
    refs:
      - master
    variables:
      - $SFDC

spreadsheet_extract:
  stage: extract
  <<: *spreadsheet_extract
  only:
    refs:
      - master
    variables:
      - $SPREADSHEET

stripe_about_gitlab:
  <<: *stripe_extract_about_gitlab
  only:
    refs:
      - master
    variables:
      - $STRIPE_ABOUT_GITLAB

stripe_githost:
  <<: *stripe_extract_githost
  only:
    refs:
      - master
    variables:
      - $STRIPE_GITHOST

zendesk:
  <<: *zendesk_extract
  only:
    refs:
      - master
    variables:
      - $ZENDESK

zuora:
  <<: *zuora_extract
  only:
    refs:
      - master
    variables:
      - $ZUORA

## Review Jobs

ci_stats_manual:
  stage: extract
  <<: *ci_stats
  only:
    - branches
  except:
    - master
  when: manual

domains_manual:
  <<: *domains_extract
  only:
    - branches
  except:
    - master
  when: manual

gitlab_manual:
  <<: *gitlab_extract
  only:
    - branches
  except:
    - master
  when: manual

lever_manual:
  <<: *lever_extract
  only:
    - branches
  except:
    - master
  when: manual

marketo_manual:
  <<: *marketo_extract
  only:
    - branches
  except:
    - master
  when: manual

netsuite_backlog_manual:
  stage: extract
  <<: *netsuite_backlog
  when: manual

netsuite_manual:
  <<: *netsuite_extract
  only:
    - branches
  except:
    - master
  when: manual

pings_manual:
  stage: extract
  <<: *pings_extract
  only:
    - branches
  except:
    - master
  when: manual

pings_backfill:
  stage: extract
  <<: *pings_backfill
  only:
    - master
  when: manual

gitlab_profiler_manual:
  stage: extract
  <<: *gitlab_profiler_backfill
  only:
    - branches
  except:
    - master
  when: manual

gitlab_profiler_backfill:
  stage: extract
  <<: *gitlab_profiler_backfill
  only:
    - master
  when: manual

sfdc_manual:
  <<: *sfdc_extract
  only:
    - branches
  except:
    - master
  when: manual

spreadsheet_extract_manual:
  stage: extract
  <<: *spreadsheet_extract
  when: manual

stripe_extract_about_gitlab_manual:
  <<: *stripe_extract_about_gitlab
  only:
    - branches
  except:
    - master
  when: manual

stripe_extract_githost_manual:
  <<: *stripe_extract_githost
  only:
    - branches
  except:
    - master
  when: manual

zendesk_manual:
  <<: *zendesk_extract
  only:
    - branches
  except:
    - master
  when: manual

zuora_manual:
  <<: *zuora_extract
  only:
    - branches
  except:
    - master
  when: manual

# Stage: model

dbt:
  stage: model
  <<: *job_definition
  script:
    - cd transform/dbt
    - ci_helpers.py use_proxy "dbt -d run --profiles-dir profile --target prod"
    - ci_helpers.py use_proxy "dbt -d test --profiles-dir profile --target prod"
  only:
    refs:
      - master
    variables:
      - $DBT

dbt_run:
  stage: model
  <<: *job_definition
  script:
    - cd transform/dbt
    - ci_helpers.py use_proxy "dbt -d run --profiles-dir profile --target prod"
    - ci_helpers.py use_proxy "dbt -d test --profiles-dir profile --target prod"
  only:
    refs:
      - branches
  when: manual

dbt_full_refresh:
  stage: model
  <<: *job_definition
  script:
    - cd transform/dbt
    - ci_helpers.py use_proxy "dbt -d run --profiles-dir profile --target prod --full-refresh"
    - ci_helpers.py use_proxy "dbt -d test --profiles-dir profile --target prod"
  when: manual

# Stage: update

sfdc_update:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 transform/sfdc_processor.py"
  only:
    refs:
      - master
    variables:
      - $SFDC_UPDATE

sfdc_snapshot:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/util/snapshot.py"
  only:
    refs:
      - master
    variables:
      - $SFDC_SNAPSHOT

sfdc_update_manual:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 transform/sfdc_processor.py"
  only:
    refs:
      - branches
  when: manual

sfdc_snapshot_manual:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/util/snapshot.py"
  only:
    refs:
      - branches
  when: manual

# Stage: review_stop

review_stop:
  stage: review_stop
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  variables:
    GIT_STRATEGY: NONE
  script:
    - git clone $CI_REPOSITORY_URL
    - ci_helpers.py delete_instance
  when: manual
  allow_failure: true
  only:
    - branches
  except:
    - master
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

#--------------------------------------------------------------------------

# Global definitions

variables:
  PYTHONPATH: "$CI_PROJECT_DIR/extract/:$CI_PROJECT_DIR/extract/shared_modules/:$PYTHONPATH"

before_script:
  - export PATH="$CI_PROJECT_DIR/orchestration/:$PATH"
  - export PYTHONPATH="$CI_PROJECT_DIR/extract/:$CI_PROJECT_DIR/extract/shared_modules/:$PYTHONPATH"
