stages:
  - build
  - extract
  - model

extract_container:
  stage: build
  image: docker:latest
  before_script:
    - ''
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - analytics
  services:
    - docker:dind
  when: manual
  allow_failure: true
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/extract:$CI_COMMIT_REF_NAME containers/extract
    - docker push $CI_REGISTRY_IMAGE/extract:$CI_COMMIT_REF_NAME

sfdc:
  variables:
    FIXED_SFDC_PASSWORD: $SFDC_PASSWORD
  stage: extract
  image: $CI_REGISTRY_IMAGE/extract:$CI_COMMIT_REF_NAME
  tags:
    - analytics
  script:
    - envsubst < "elt/config/kettle/kettle.properties" > "$KETTLE_HOME/.kettle/kettle.properties"
    - cp "elt/config/kettle/repositories.xml" "$KETTLE_HOME/.kettle/repositories.xml"
    - kitchen.sh -file=elt/sfdc/sfdc_extract.kjb -level=Minimal

zuora:
  variables:
    FIXED_ZUORA_PASSWORD: $ZUORA_PASSWORD
  stage: extract
  image: $CI_REGISTRY_IMAGE/extract:$CI_COMMIT_REF_NAME
  tags:
    - analytics
  script:
    - envsubst < "elt/config/environment.conf.template" > "elt/config/environment.conf"
    - python3 elt/zuora/zuora_export.py

model:
  stage: model
  image: $CI_REGISTRY_IMAGE/extract:$CI_COMMIT_REF_NAME
  tags:
    - analytics
  script:
    - cd elt/dbt
    - dbt -d run --profiles-dir profile --target prod --models sfdc


# ---------------------------------------------------------------------------

.bizops: &bizops |
  if [ -n $GCP_SERVICE_CREDS ]; then
    echo $GCP_SERVICE_CREDS > /bizops/gcp_credentials.json
    cloud_sql_proxy -instances="$GCP_INSTANCE_NAME"=tcp:5432 -credential_file=/bizops/gcp_credentials.json &
  fi

before_script:
  - *bizops