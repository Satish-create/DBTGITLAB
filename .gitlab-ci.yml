# Globals defined at the bottom of the file

# Job Templates

.job_template: &job_definition
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  tags:
    - analytics

.job_housekeeping: &job_housekeeping
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  tags:
    - housekeeping

.marketo_extract: &marketo_extract
  stage: extract
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "bash processes/mkto_processor.sh"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|marketo/

.zendesk_extract: &zendesk_extract
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 elt/zendesk/src --schema zendesk apply_schema"
    - ci_helpers.py use_proxy "python3 elt/zendesk/src --schema zendesk --days=1 export"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|zendesk/

.lever_extract: &lever_extract
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/lever/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 elt/lever/src --schema lever apply_schema"
    - ci_helpers.py use_proxy "python3 elt/lever/src --schema lever --days=7 export"
    - ci_helpers.py use_proxy "python3 elt/lever/src --schema lever --days=365 --only_offers export"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|lever/

.ci_stats: &ci_stats
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/pings/src/config/required_vars_ci_stats.yaml
    - ci_helpers.py use_proxy "python3 elt/pings/src apply_schema --db_manifest ci_stats"
    - ci_helpers.py use_proxy "python3 elt/pings/src export --db_manifest ci_stats --hours 8"

.netsuite_extract: &netsuite_extract
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/netsuite/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 elt/netsuite/src/ --schema netsuite apply_schema"
    - ci_helpers.py use_proxy "python3 elt/netsuite/src/ --schema netsuite export --days 3"
    - ci_helpers.py use_proxy "python3 elt/netsuite/src/ --schema netsuite backlog --days 15"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|netsuite/

.netsuite_backlog: &netsuite_backlog
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/netsuite/src/config/required_ci_cd_vars.yaml
    - ci_helpers.py use_proxy "python3 elt/netsuite/src/ --schema netsuite backlog --days 60"

.pings_extract: &pings_extract
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 elt/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 elt/pings/src export --db_manifest version --days 1"
    - ci_helpers.py use_proxy "python3 elt/pings/src apply_schema --db_manifest customers"
    - ci_helpers.py use_proxy "python3 elt/pings/src export --db_manifest customers --days 1"
    - ci_helpers.py use_proxy "python3 elt/pings/src apply_schema --db_manifest license"
    - ci_helpers.py use_proxy "python3 elt/pings/src export --db_manifest license --days 1"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|netsuite/

.pings_backfill: &pings_backfill
  stage: extract
  <<: *job_definition
  script:
    - check_ci_cd_vars.py --file elt/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 elt/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 elt/pings/src export --db_manifest version"

.spreadsheet_extract: &spreadsheet_extract
  stage: extract
  <<: *job_definition
  script:
    - pip3 install -U pyasn1-modules
    - ci_helpers.py use_proxy "python3 elt/util/spreadsheet_loader.py sheet historical.sales_quota"

.zuora_extract: &zuora_extract
  variables:
    FIXED_ZUORA_PASSWORD: $ZUORA_PASSWORD
  stage: extract
  <<: *job_definition
  script:
    - envsubst < "elt/config/environment.conf.template" > "elt/config/environment.conf"
    - ci_helpers.py use_proxy "python3 elt/zuora/zuora_export.py"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|zuora/

.sfdc_extract: &sfdc_extract
  variables:
    FIXED_SFDC_PASSWORD: $SFDC_PASSWORD_NOTOKEN
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - pip3 install salesforce-bulk # TODO: add me to the container
    - ci_helpers.py use_proxy "python3 elt/sfdc/src/ --schema salesforce apply_schema"
    - ci_helpers.py use_proxy "python3 elt/sfdc/src/ --schema salesforce export"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|sfdc/

# DEPRECATED
.sfdc_kettle_extract: &sfdc_kettle_extract
  variables:
    FIXED_SFDC_PASSWORD: $SFDC_PASSWORD
  stage: extract
  retry: 1
  <<: *job_definition
  script:
    - envsubst < "elt/config/kettle/kettle.properties" > "$KETTLE_HOME/.kettle/kettle.properties"
    - cp "elt/config/kettle/repositories.xml" "$KETTLE_HOME/.kettle/repositories.xml"
    - ci_helpers.py use_proxy "kitchen.sh -file=elt/sfdc_kettle/sfdc_extract.kjb -level=Minimal"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|sfdc/

.domains_extract: &domains_extract
  stage: extract
  retry: 1
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "bash processes/hosts_to_sfdc/python_timecheck.sh"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|domains/

.stripe_extract_githost: &stripe_extract_githost
  variables:
    GITHOST_STRIPE_API_KEY_SK: $GITHOST_STRIPE_API_KEY_SK
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 elt/stripe/src --schema stripe_githost apply_schema"
    - ci_helpers.py use_proxy "python3 elt/stripe/src --schema stripe_githost --days=7 export"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|stripe_githost/

.stripe_extract_about_gitlab: &stripe_extract_about_gitlab
  variables:
    ABOUT_GITLAB_STRIPE_API_KEY_SK: $ABOUT_GITLAB_STRIPE_API_KEY_SK
  stage: extract
  allow_failure: true
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 elt/stripe/src --schema stripe_about_gitlab apply_schema"
    - ci_helpers.py use_proxy "python3 elt/stripe/src --schema stripe_about_gitlab --days=7 export"
  except:
    variables:
      - $EXTRACT_SKIP =~ /all|stripe_gitlab/

# ---------------------------------------------------------------------------

# Stages
stages:
  - review
  - setup
  - extract
  - model
  - update
  - review_stop

# Stage: review

review: &review
  stage: review
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  variables:
    GIT_STRATEGY: clone
  tags:
    - analytics
  script:
    - ci_helpers.py manage_instances
  environment:
    name: review/$CI_COMMIT_REF_NAME
    on_stop: review_stop
  only:
    - branches
  except:
    - master

review_refresh:
  <<: *review
  variables:
    FORCE: "true"
  when: manual

# Stage: setup

refresh_dev: &refresh_dev
  <<: *job_housekeeping
  stage: setup
  variables:
    GCP_INSTANCE_NAME: $GCP_PRODUCTION_INSTANCE_NAME
    GIT_STRATEGY: clone
  script:
    - ci_helpers.py refresh_dev_instance
    - ci_helpers.py use_proxy "python3 ci_scripts/grant_roles.py"
  only:
    - master

force_refresh_dev:
  <<: *refresh_dev
  variables:
    GCP_INSTANCE_NAME: $GCP_PRODUCTION_INSTANCE_NAME
    GIT_DEPTH: 1
    FORCE: "true"
  when: manual

update_db: &update_db
  <<: *job_housekeeping
  stage: setup
  script:
    - ci_helpers.py use_proxy "python3 ci_scripts/grant_roles.py"
  only:
    - branches
  except:
    - master

force_update_db:
  <<: *update_db
  when: manual

# Stage: extract
## Production Jobs

zuora:
  <<: *zuora_extract
  only:
    - master

pings:
  stage: extract
  <<: *pings_extract
  only:
    - master

pings_backfill:
  stage: extract
  <<: *pings_backfill
  only:
    - master
  when: manual

stripe_githost:
  <<: *stripe_extract_githost
  retry: 1
  only:
    - master
  when: manual

ci_stats:
  stage: extract
  allow_failure: true
  <<: *ci_stats
  only:
    - master

sfdc:
  <<: *sfdc_extract
  retry: 1
  only:
    - master

sfdc_kettle:
  <<: *sfdc_kettle_extract
  retry: 1
  only:
    - master

spreadsheet_extract:
  stage: extract
  <<: *spreadsheet_extract
  only:
    - master

domains:
  <<: *domains_extract
  only:
    - master

marketo:
  <<: *marketo_extract
  only:
    - master

zendesk:
  <<: *zendesk_extract
  retry: 1
  only:
    - master

lever:
  <<: *lever_extract
  retry: 1
  only:
    - master

netsuite:
  <<: *netsuite_extract
  retry: 1
  only:
    - master

## Review Jobs

sfdc_manual:
  <<: *sfdc_extract
  only:
    - branches
  except:
    - master
  when: manual

netsuite_backlog_manual:
  stage: extract
  allow_failure: true
  <<: *netsuite_backlog
  retry: 1
  when: manual

zuora_manual:
  <<: *zuora_extract
  only:
    - branches
  except:
    - master
  when: manual

ci_stats_manual:
  stage: extract
  <<: *ci_stats
  only:
    - branches
  except:
    - master
  when: manual

spreadsheet_extract_manual:
  stage: extract
  <<: *spreadsheet_extract
  when: manual

pings_manual:
  stage: extract
  <<: *pings_extract
  only:
    - branches
  except:
    - master
  when: manual

domains_manual:
  <<: *domains_extract
  only:
    - branches
  except:
    - master
  when: manual

marketo_manual:
  <<: *marketo_extract
  only:
    - branches
  except:
    - master
  when: manual

zendesk_manual:
  <<: *zendesk_extract
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

lever_manual:
  <<: *lever_extract
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

netsuite_manual:
  <<: *netsuite_extract
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

stripe_extract_githost_manual:
  <<: *stripe_extract_githost
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

stripe_extract_about_gitlab_manual:
  <<: *stripe_extract_about_gitlab
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

sfdc_manual:
  <<: *sfdc_extract
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

sfdc_kettle_manual:
  <<: *sfdc_kettle_extract
  retry: 1
  only:
    - branches
  except:
    - master
  when: manual

# Stage: model

dbt:
  stage: model
  <<: *job_definition
  script:
    - cd elt/dbt
    - ci_helpers.py use_proxy "dbt -d run --profiles-dir profile --target prod"
    - ci_helpers.py use_proxy "dbt -d test --profiles-dir profile --target prod"

dbt_refresh:
  stage: model
  <<: *job_definition
  script:
    - cd elt/dbt
    - ci_helpers.py use_proxy "dbt -d run --profiles-dir profile --target prod --full-refresh"
    - ci_helpers.py use_proxy "dbt -d test --profiles-dir profile --target prod"
  when: manual

# Stage: update

sfdc_update:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 processes/sfdc_processor.py"
  except:
    variables:
      - $UPDATE_SKIP =~ /all|sfdc_update/

sfdc_snapshot:
  stage: update
  <<: *job_definition
  script:
    - ci_helpers.py use_proxy "python3 elt/util/snapshot.py"
  except:
    variables:
      - $UPDATE_SKIP =~ /all|sfdc_snapshot/


# Stage: review_stop

review_stop:
  stage: review_stop
  image: registry.gitlab.com/meltano/meltano-elt/extract:latest
  variables:
    GIT_STRATEGY: clone
  script:
    - ci_helpers.py delete_instance
  when: manual
  allow_failure: true
  only:
    - branches
  except:
    - master
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

#--------------------------------------------------------------------------

# Global definitions

variables:
  PYTHONPATH: "$CI_PROJECT_DIR/elt/shared_modules/:$PYTHONPATH"

before_script:
  - export PATH="$CI_PROJECT_DIR/ci_scripts/:$PATH"
  - export PYTHONPATH="$CI_PROJECT_DIR/elt/shared_modules/:$PYTHONPATH"
