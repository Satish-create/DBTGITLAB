# Job definitions
#
.job_template: &extract_definition
  image: registry.gitlab.com/gitlab-data/data-image:latest
  before_script:
    - echo $STITCH_CONFIG > stitch_config.json
    - export PATH="$CI_PROJECT_DIR/orchestration/:$PATH"
    - export PYTHONPATH="$CI_PROJECT_DIR/extract/:$CI_PROJECT_DIR/extract/shared_modules/:$PYTHONPATH"
    - echo $SNOWFLAKE_DATABASE
    - if [ $SNOWFLAKE_DATABASE = "master" ]; then export SNOWFLAKE_LOAD_DATABASE="RAW"; else export SNOWFLAKE_LOAD_DATABASE="${CI_COMMIT_REF_NAME^^}_RAW"; fi
    - echo $SNOWFLAKE_LOAD_DATABASE
  tags:
    - analytics

.ci_stats: &ci_stats
  stage: extract
  <<: *extract_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_ci_stats.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest ci_stats"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest ci_stats --hours 8"

# =========================
## Postgres Extract Section
# =========================

.ci_stats_db_extract: &ci_stats_db_extract
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/postgres/
    - python tap_postgres/tap_postgres.py tap manifests/ci_stats_db_manifest.yaml

.customers_db_extract: &customers_db_extract
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/postgres/
    - python tap_postgres/tap_postgres.py tap manifests/customers_db_manifest.yaml

.gitlab_profiler_db_extract: &gitlab_profiler_db_extract
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/postgres/
    - python tap_postgres/tap_postgres.py tap manifests/gitlab_profiler_db_manifest.yaml

.license_db_extract: &license_db_extract
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/postgres/
    - python tap_postgres/tap_postgres.py tap manifests/license_db_manifest.yaml

.version_db_extract: &version_db_extract
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/postgres/
    - python tap_postgres/tap_postgres.py tap manifests/version_db_manifest.yaml

# =========================

.netsuite_extract: &netsuite_extract
  stage: extract
  <<: *extract_definition
  script:
    - python extract/netsuite/src/ --schema netsuite export --days 1 | target-stitch -c stitch_config.json
    - python extract/netsuite/src/ --schema netsuite backlog --days 15 | target-stitch -c stitch_config.json

.netsuite_backlog: &netsuite_backlog
  stage: extract
  <<: *extract_definition
  script:
    - python extract/netsuite/src/ --schema netsuite backlog --days 60 | target-stitch -c stitch_config.json

.netsuite_currency_rate_backfill: &netsuite_currency_rate_backfill
  stage: extract
  <<: *extract_definition
  script:
    - python extract/netsuite/src/ --schema netsuite backlog --backfill-entity currency_rate --days 1460 | target-stitch -c stitch_config.json

.netsuite_extract_legacy: &netsuite_extract_legacy
  stage: extract
  <<: *extract_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/netsuite_legacy/src/ --schema netsuite export --days 3"
    - ci_helpers.py use_proxy "python3 extract/netsuite_legacy/src/ --schema netsuite backlog --days 15"

.netsuite_backlog_legacy: &netsuite_backlog_legacy
  stage: extract
  <<: *extract_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/netsuite_legacy/src/ --schema netsuite backlog --days 60"

.netsuite_currency_rate_backfill_legacy: &netsuite_currency_rate_backfill_legacy
  stage: extract
  <<: *extract_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/netsuite_legacy/src/ --schema netsuite backlog --backfill-entity currency_rate --days 1460"

.pings_extract: &pings_extract
  stage: extract
  <<: *extract_definition
  variables:
    PINGS_LOAD_DAYS: 2
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_pings.yaml
    - echo "Days to load = $PINGS_LOAD_DAYS"
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest version --days $PINGS_LOAD_DAYS"
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest customers"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest customers --days $PINGS_LOAD_DAYS"
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest license"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest license --days $PINGS_LOAD_DAYS"

.pings_backfill: &pings_backfill
  stage: extract
  <<: *extract_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest version"

.gitlab_profiler_extract: &gitlab_profiler_extract
  stage: extract
  <<: *extract_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_gitlab_profiler.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest gitlab_profiler"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest gitlab_profiler --days 15"

.gitlab_profiler_backfill: &gitlab_profiler_backfill
  stage: extract
  <<: *extract_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_gitlab_profiler.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src apply_schema --db_manifest gitlab_profiler"
    - ci_helpers.py use_proxy "python3 extract/pings/src export --db_manifest gitlab_profiler --days 3600"

.sheetload_snowflake: &sheetload_snowflake
  stage: extract
  <<: *extract_definition
  script:
    - cd extract/sheetload/
    - python3 sheetload.py sheets sheets.txt snowflake

.sfdc_extract: &sfdc_extract
  variables:
    FIXED_SFDC_PASSWORD: $SFDC_PASSWORD_NOTOKEN
  stage: extract
  <<: *extract_definition
  script:
    - pip3 install salesforce-bulk # TODO: add me to the container
    - ci_helpers.py use_proxy "python3 extract/sfdc/src/ --schema sfdc apply_schema"
    - ci_helpers.py use_proxy "python3 extract/sfdc/src/ --schema sfdc export"

.domains_extract: &domains_extract
  stage: extract
  <<: *extract_definition
  script:
    - ci_helpers.py use_proxy "bash transform/hosts_to_sfdc/python_timecheck.sh"

.gitlab_extract: &gitlab_extract
  stage: extract
  retry: 1
  <<: *extract_definition
  script:
    - ci_helpers.py use_proxy "python3 extract/gitlab/src -S gitlab apply_schema"
    - ci_helpers.py use_proxy "python3 extract/gitlab/src -S gitlab export"

.discover_gitlab_dbs_schema: &discover_gitlab_dbs_schema
  stage: extract
  <<: *extract_definition
  script:
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_ci_stats.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src discover_schema --db_manifest ci_stats"
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_pings.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src discover_schema --db_manifest version"
    - ci_helpers.py use_proxy "python3 extract/pings/src discover_schema --db_manifest customers"
    - ci_helpers.py use_proxy "python3 extract/pings/src discover_schema --db_manifest license"
    - check_ci_cd_vars.py --file extract/pings/src/config/required_vars_gitlab_profiler.yaml
    - ci_helpers.py use_proxy "python3 extract/pings/src discover_schema --db_manifest gitlab_profiler"

## Production Jobs

ci_stats:
  <<: *ci_stats
  only:
    refs:
      - master
    variables:
      - $CI_STATS

domains:
  <<: *domains_extract
  only:
    refs:
      - master
    variables:
      - $DOMAINS

gitlab:
  <<: *gitlab_extract
  only:
    refs:
      - master
    variables:
      - $GITLAB

gitlab_profiler:
  <<: *gitlab_profiler_extract
  only:
    refs:
      - master
    variables:
      - $GITLAB_PROFILER

netsuite:
  <<: *netsuite_extract
  only:
    refs:
      - master
    variables:
      - $NETSUITE_STITCH

netsuite_legacy:
  <<: *netsuite_extract_legacy
  only:
    refs:
      - master
    variables:
      - $NETSUITE

pings:
  stage: extract
  <<: *pings_extract
  only:
    refs:
      - master
    variables:
      - $PINGS

version_db:
  stage: extract
  <<: *version_db_extract
  variables:
    DAYS: 1
    AVG_CYCLE_ANALYTICS_ID: 1
  only:
    refs:
      - master
    variables:
      - $VERSION_DB_EXTRACTION

customers_db:
  stage: extract
  <<: *customers_db_extract
  variables:
    DAYS: 1
  only:
    refs:
      - master
    variables:
      - $CUSTOMERS_DB_EXTRACTION

license_db:
  stage: extract
  <<: *license_db_extract
  variables:
    DAYS: 1
  only:
    refs:
      - master
    variables:
      - $LICENSE_DB_EXTRACTION

ci_stats_db:
  stage: extract
  <<: *ci_stats_db_extract
  variables:
    HOURS: 8
  only:
    refs:
      - master
    variables:
      - $CI_STATS_DB_EXTRACTION

gitlab_profiler_db:
  stage: extract
  <<: *gitlab_profiler_db_extract
  variables:
    DAYS: 15
  only:
    refs:
      - master
    variables:
      - $GITLAB_PROFILER_DB_EXTRACTION

sfdc:
  <<: *sfdc_extract
  only:
    refs:
      - master
    variables:
      - $SFDC

sheetload_snowflake:
  stage: extract
  <<: *sheetload_snowflake
  only:
    refs:
      - master
    variables:
      - $SHEETLOAD_SNOWFLAKE

## Review Jobs

ci_stats_manual:
  <<: *ci_stats
  only:
    - branches
  except:
    - master
  when: manual

domains_manual:
  <<: *domains_extract
  only:
    - branches
  except:
    - master
  when: manual

gitlab_manual:
  <<: *gitlab_extract
  only:
    - branches
  except:
    - master
  when: manual

netsuite_backlog_manual:
  stage: extract
  <<: *netsuite_backlog
  when: manual

netsuite_currency_rate_backfill_manual:
  stage: extract
  <<: *netsuite_currency_rate_backfill
  when: manual

netsuite_manual:
  <<: *netsuite_extract
  only:
    - branches
  except:
    - master
  when: manual

netsuite_backlog_legacy_manual:
  stage: extract
  <<: *netsuite_backlog_legacy
  when: manual

netsuite_currency_rate_backfill_legacy_manual:
  stage: extract
  <<: *netsuite_currency_rate_backfill_legacy
  when: manual

netsuite_legacy_manual:
  <<: *netsuite_extract_legacy
  only:
    - branches
  except:
    - master
  when: manual

pings_manual:
  stage: extract
  <<: *pings_extract
  only:
    - branches
  except:
    - master
  when: manual

pings_backfill:
  stage: extract
  <<: *pings_backfill
  only:
    - master
  when: manual

gitlab_profiler_manual:
  stage: extract
  <<: *gitlab_profiler_backfill
  only:
    - branches
  except:
    - master
  when: manual

gitlab_profiler_backfill:
  stage: extract
  <<: *gitlab_profiler_backfill
  only:
    - master
  when: manual

discover_gitlab_dbs_schema_manual:
  stage: extract
  <<: *discover_gitlab_dbs_schema
  only:
    - branches
  except:
    - master
  when: manual

version_db_manual:
  stage: extract
  <<: *version_db_extract
  variables:
    DAYS: 1
    AVG_CYCLE_ANALYTICS_ID: 1341780
  only:
    - branches
  except:
    - master
  when: manual

customers_db_manual:
  stage: extract
  <<: *customers_db_extract
  variables:
    DAYS: 1
  only:
    - branches
  except:
    - master
  when: manual

license_db_manual:
  stage: extract
  <<: *license_db_extract
  variables:
    DAYS: 1
  only:
    - branches
  except:
    - master
  when: manual

ci_stats_db_manual:
  stage: extract
  <<: *ci_stats_db_extract
  variables:
    HOURS: 8
  only:
    - branches
  except:
    - master
  when: manual

gitlab_profiler_db_manual:
  stage: extract
  <<: *gitlab_profiler_db_extract
  variables:
    DAYS: 15
  only:
    - branches
  except:
    - master
  when: manual

sfdc_manual:
  <<: *sfdc_extract
  only:
    - branches
  except:
    - master
  when: manual

sheetload_snowflake_manual:
  stage: extract
  <<: *sheetload_snowflake
  when: manual

# Stage: test

.test_job_template: &test_job_template
  image: registry.gitlab.com/gitlab-data/data-image:latest

