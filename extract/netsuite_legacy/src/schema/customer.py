from elt.schema import Schema, Column, DBType

from netsuite_legacy.src.schema.utils import columns_from_mappings

PG_SCHEMA = 'netsuite'
PG_TABLE = 'customers'
PRIMARY_KEY = 'internal_id' # TODO: confirm


def describe_schema(args) -> Schema:
    table_name = args.table_name or PG_TABLE
    table_schema = args.schema or PG_SCHEMA

    # curry the Column object
    def column(column_name, data_type, *,
               is_nullable=True,
               is_mapping_key=False):
        return Column(table_schema=table_schema,
                      table_name=table_name,
                      column_name=column_name,
                      data_type=data_type.value,
                      is_nullable=is_nullable,
                      is_mapping_key=is_mapping_key)

    return Schema(table_schema,
        [ column("internal_id", DBType.Long, is_mapping_key=True) ]  \
        + columns_from_mappings(column, COLUMN_MAPPINGS)  \
        + [ column("imported_at", DBType.Timestamp) ]
    )


def table_name(args):
    return args.table_name or PG_TABLE


COLUMN_MAPPINGS = [
    {'in': 'accessRole', 'out': 'access_role', 'type':'Recordref'},
    {'in': 'accountNumber', 'out': 'account_number', 'type':'String'},
    {'in': 'addressbookList', 'out': 'addressbook_list', 'type':'Customeraddressbooklist'},
    {'in': 'aging', 'out': 'aging', 'type':'Double'},
    {'in': 'aging1', 'out': 'aging1', 'type':'Double'},
    {'in': 'aging2', 'out': 'aging2', 'type':'Double'},
    {'in': 'aging3', 'out': 'aging3', 'type':'Double'},
    {'in': 'aging4', 'out': 'aging4', 'type':'Double'},
    {'in': 'alcoholRecipientType', 'out': 'alcohol_recipient_type', 'type':'Alcoholrecipienttype'},
    {'in': 'altEmail', 'out': 'alt_email', 'type':'String'},
    {'in': 'altName', 'out': 'alt_name', 'type':'String'},
    {'in': 'altPhone', 'out': 'alt_phone', 'type':'String'},
    {'in': 'balance', 'out': 'balance', 'type':'Double'},
    {'in': 'billPay', 'out': 'bill_pay', 'type':'Boolean'},
    {'in': 'buyingReason', 'out': 'buying_reason', 'type':'Recordref'},
    {'in': 'buyingTimeFrame', 'out': 'buying_time_frame', 'type':'Recordref'},
    {'in': 'campaignCategory', 'out': 'campaign_category', 'type':'Recordref'},
    {'in': 'category', 'out': 'category', 'type':'Recordref'},
    {'in': 'clickStream', 'out': 'click_stream', 'type':'String'},
    {'in': 'comments', 'out': 'comments', 'type':'String'},
    {'in': 'companyName', 'out': 'company_name', 'type':'String'},
    {'in': 'consolAging', 'out': 'consol_aging', 'type':'Double'},
    {'in': 'consolAging1', 'out': 'consol_aging1', 'type':'Double'},
    {'in': 'consolAging2', 'out': 'consol_aging2', 'type':'Double'},
    {'in': 'consolAging3', 'out': 'consol_aging3', 'type':'Double'},
    {'in': 'consolAging4', 'out': 'consol_aging4', 'type':'Double'},
    {'in': 'consolBalance', 'out': 'consol_balance', 'type':'Double'},
    {'in': 'consolDaysOverdue', 'out': 'consol_days_overdue', 'type':'Long'},
    {'in': 'consolDepositBalance', 'out': 'consol_deposit_balance', 'type':'Double'},
    {'in': 'consolOverdueBalance', 'out': 'consol_overdue_balance', 'type':'Double'},
    {'in': 'consolUnbilledOrders', 'out': 'consol_unbilled_orders', 'type':'Double'},
    {'in': 'contactRolesList', 'out': 'contact_roles_list', 'type':'Contactaccessroleslist'},
    {'in': 'contribPct', 'out': 'contrib_pct', 'type':'String'},
    {'in': 'creditCardsList', 'out': 'credit_cards_list', 'type':'Customercreditcardslist'},
    {'in': 'creditHoldOverride', 'out': 'credit_hold_override', 'type':'Customercreditholdoverride'},
    {'in': 'creditLimit', 'out': 'credit_limit', 'type':'Double'},
    {'in': 'currency', 'out': 'currency', 'type':'Recordref'},
    {'in': 'currencyList', 'out': 'currency_list', 'type':'Customercurrencylist'},
    {'in': 'customFieldList', 'out': 'custom_field_list', 'type':'Customfieldlist'},
    {'in': 'customForm', 'out': 'custom_form', 'type':'Recordref'},
    {'in': 'dateCreated', 'out': 'date_created', 'type':'Datetime'},
    {'in': 'daysOverdue', 'out': 'days_overdue', 'type':'Long'},
    {'in': 'defaultAddress', 'out': 'default_address', 'type':'String'},
    {'in': 'defaultOrderPriority', 'out': 'default_order_priority', 'type':'Double'},
    {'in': 'depositBalance', 'out': 'deposit_balance', 'type':'Double'},
    {'in': 'displaySymbol', 'out': 'display_symbol', 'type':'String'},
    {'in': 'downloadList', 'out': 'download_list', 'type':'Customerdownloadlist'},
    {'in': 'drAccount', 'out': 'dr_account', 'type':'Recordref'},
    {'in': 'email', 'out': 'email', 'type':'String'},
    {'in': 'emailPreference', 'out': 'email_preference', 'type':'Emailpreference'},
    {'in': 'emailTransactions', 'out': 'email_transactions', 'type':'Boolean'},
    {'in': 'endDate', 'out': 'end_date', 'type':'Datetime'},
    {'in': 'entityId', 'out': 'entity_id', 'type':'String'},
    {'in': 'entityStatus', 'out': 'entity_status', 'type':'Recordref'},
    {'in': 'estimatedBudget', 'out': 'estimated_budget', 'type':'Double'},
    {'in': 'externalId', 'out': 'external_id', 'type':'string'},
    {'in': 'fax', 'out': 'fax', 'type':'String'},
    {'in': 'faxTransactions', 'out': 'fax_transactions', 'type':'Boolean'},
    {'in': 'firstName', 'out': 'first_name', 'type':'String'},
    {'in': 'firstVisit', 'out': 'first_visit', 'type':'Datetime'},
    {'in': 'fxAccount', 'out': 'fx_account', 'type':'Recordref'},
    {'in': 'giveAccess', 'out': 'give_access', 'type':'Boolean'},
    {'in': 'globalSubscriptionStatus', 'out': 'global_subscription_status', 'type':'Globalsubscriptionstatus'},
    {'in': 'groupPricingList', 'out': 'group_pricing_list', 'type':'Customergrouppricinglist'},
    {'in': 'homePhone', 'out': 'home_phone', 'type':'String'},
    {'in': 'image', 'out': 'image', 'type':'Recordref'},
    {'in': 'isBudgetApproved', 'out': 'is_budget_approved', 'type':'Boolean'},
    {'in': 'isInactive', 'out': 'is_inactive', 'type':'Boolean'},
    {'in': 'isPerson', 'out': 'is_person', 'type':'Boolean'},
    {'in': 'itemPricingList', 'out': 'item_pricing_list', 'type':'Customeritempricinglist'},
    {'in': 'keywords', 'out': 'keywords', 'type':'String'},
    {'in': 'language', 'out': 'language', 'type':'Language'},
    {'in': 'lastModifiedDate', 'out': 'last_modified_date', 'type':'Datetime'},
    {'in': 'lastName', 'out': 'last_name', 'type':'String'},
    {'in': 'lastPageVisited', 'out': 'last_page_visited', 'type':'String'},
    {'in': 'lastVisit', 'out': 'last_visit', 'type':'Datetime'},
    {'in': 'leadSource', 'out': 'lead_source', 'type':'Recordref'},
    {'in': 'middleName', 'out': 'middle_name', 'type':'String'},
    {'in': 'mobilePhone', 'out': 'mobile_phone', 'type':'String'},
    {'in': 'monthlyClosing', 'out': 'monthly_closing', 'type':'Customermonthlyclosing'},
    {'in': 'negativeNumberFormat', 'out': 'negative_number_format', 'type':'Customernegativenumberformat'},
    {'in': 'numberFormat', 'out': 'number_format', 'type':'Customernumberformat'},
    {'in': 'openingBalance', 'out': 'opening_balance', 'type':'Double'},
    {'in': 'openingBalanceAccount', 'out': 'opening_balance_account', 'type':'Recordref'},
    {'in': 'openingBalanceDate', 'out': 'opening_balance_date', 'type':'Datetime'},
    {'in': 'overdueBalance', 'out': 'overdue_balance', 'type':'Double'},
    {'in': 'overrideCurrencyFormat', 'out': 'override_currency_format', 'type':'Boolean'},
    {'in': 'parent', 'out': 'parent', 'type':'Recordref'},
    {'in': 'partner', 'out': 'partner', 'type':'Recordref'},
    {'in': 'partnersList', 'out': 'partners_list', 'type':'Customerpartnerslist'},
    {'in': 'password', 'out': 'password', 'type':'String'},
    {'in': 'password2', 'out': 'password2', 'type':'String'},
    {'in': 'phone', 'out': 'phone', 'type':'String'},
    {'in': 'phoneticName', 'out': 'phonetic_name', 'type':'String'},
    {'in': 'prefCCProcessor', 'out': 'pref_c_c_processor', 'type':'Recordref'},
    {'in': 'priceLevel', 'out': 'price_level', 'type':'Recordref'},
    {'in': 'printOnCheckAs', 'out': 'print_on_check_as', 'type':'String'},
    {'in': 'printTransactions', 'out': 'print_transactions', 'type':'Boolean'},
    {'in': 'receivablesAccount', 'out': 'receivables_account', 'type':'Recordref'},
    {'in': 'referrer', 'out': 'referrer', 'type':'String'},
    {'in': 'reminderDays', 'out': 'reminder_days', 'type':'Long'},
    {'in': 'representingSubsidiary', 'out': 'representing_subsidiary', 'type':'Recordref'},
    {'in': 'requirePwdChange', 'out': 'require_pwd_change', 'type':'Boolean'},
    {'in': 'resaleNumber', 'out': 'resale_number', 'type':'String'},
    {'in': 'salesGroup', 'out': 'sales_group', 'type':'Recordref'},
    {'in': 'salesReadiness', 'out': 'sales_readiness', 'type':'Recordref'},
    {'in': 'salesRep', 'out': 'sales_rep', 'type':'Recordref'},
    {'in': 'salesTeamList', 'out': 'sales_team_list', 'type':'Customersalesteamlist'},
    {'in': 'salutation', 'out': 'salutation', 'type':'String'},
    {'in': 'sendEmail', 'out': 'send_email', 'type':'Boolean'},
    {'in': 'shipComplete', 'out': 'ship_complete', 'type':'Boolean'},
    {'in': 'shippingItem', 'out': 'shipping_item', 'type':'Recordref'},
    {'in': 'stage', 'out': 'stage', 'type':'Customerstage'},
    {'in': 'startDate', 'out': 'start_date', 'type':'Datetime'},
    {'in': 'subscriptionsList', 'out': 'subscriptions_list', 'type':'Subscriptionslist'},
    {'in': 'subsidiary', 'out': 'subsidiary', 'type':'Recordref'},
    {'in': 'symbolPlacement', 'out': 'symbol_placement', 'type':'Currencysymbolplacement'},
    {'in': 'syncPartnerTeams', 'out': 'sync_partner_teams', 'type':'Boolean'},
    {'in': 'taxable', 'out': 'taxable', 'type':'Boolean'},
    {'in': 'taxExempt', 'out': 'tax_exempt', 'type':'Boolean'},
    {'in': 'taxItem', 'out': 'tax_item', 'type':'Recordref'},
    {'in': 'terms', 'out': 'terms', 'type':'Recordref'},
    {'in': 'territory', 'out': 'territory', 'type':'Recordref'},
    {'in': 'thirdPartyAcct', 'out': 'third_party_acct', 'type':'String'},
    {'in': 'thirdPartyCountry', 'out': 'third_party_country', 'type':'Country'},
    {'in': 'thirdPartyZipcode', 'out': 'third_party_zipcode', 'type':'String'},
    {'in': 'title', 'out': 'title', 'type':'String'},
    {'in': 'unbilledOrders', 'out': 'unbilled_orders', 'type':'Double'},
    {'in': 'url', 'out': 'url', 'type':'String'},
    {'in': 'vatRegNumber', 'out': 'vat_reg_number', 'type':'String'},
    {'in': 'visits', 'out': 'visits', 'type':'Long'},
    {'in': 'webLead', 'out': 'web_lead', 'type':'String'},
]

