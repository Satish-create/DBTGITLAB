# Job templates

.orchestrate_branch: &orchestrate_branch
  image: registry.gitlab.com/meltano/analytics/orchestrate:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    MELT_JOBS_HOME: /orchestrate/tests/jobs/
  tags:
    - housekeeping
  except:
    refs:
      - master

# Build

# Builds the orchestrate container for use in testing on branches
build_orchestrate:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - housekeeping
  script:
    - mkdir -p /root/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /root/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/orchestrate --dockerfile $CI_PROJECT_DIR/orchestrate/Dockerfile --destination $CI_REGISTRY_IMAGE/orchestrate:$CI_COMMIT_SHA
  except:
    refs:
      - master
  when: manual

# Builds the orchestrate container as latest on master
publish_orchestrate:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - housekeeping
  script:
    - mkdir -p /root/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /root/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/orchestrate --dockerfile $CI_PROJECT_DIR/orchestrate/Dockerfile --destination $CI_REGISTRY_IMAGE/orchestrate:latest
  only:
    refs:
      - master
    variables:
      - $CI_PIPELINE_SOURCE == 'push'

# Stage: test

run_orchestrate_examples: &test_orchestrate
  <<: *orchestrate_branch
  stage: test
  variables:
    CLOUD_SDK_REPO: "cloud-sdk-stretch"
    MELT_JOBS_HOME: /orchestrate/examples/example_jobs/
  script:
    - wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /usr/bin/cloud_sql_proxy
    - chmod +x /usr/bin/cloud_sql_proxy
    - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - apt-get update && apt-get install -y google-cloud-sdk
    - pip install pandas requests
    - echo $MELT_JOBS_HOME
    - ci_helpers.py use_proxy "orchestrate scheduler"
  when: manual

test_orchestrate: &run_orchestrate_tests
  <<: *orchestrate_branch
  stage: test
  script:
    - cd /orchestrate
    - pytest tests/ -vv
  when: manual

var_test: &var_test
  <<: *orchestrate_branch
  stage: test
  script:
    - echo "test passed"
  only:
    variables:
      - $TEST_PIPELINE

failing_test: &failing_test
  <<: *orchestrate_branch
  stage: test
  script:
    - exit 1
  only:
    variables:
      - $TEST_FAILED_JOB

sleeping_test: &sleeping_test
  <<: *orchestrate_branch
  stage: test
  script:
    - sleep 60
  only:
    variables:
      - $TEST_SLEEPING_JOB

