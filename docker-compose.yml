version: '3.7'
services:
    webserver:
        image: registry.gitlab.com/gitlab-data/data-image/airflow-image:latest
        restart: "no"
        ports:
          - "8080:8080"
        depends_on:
          - proxy
        environment:
          AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
          AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
          AIRFLOW__CORE__DAGS_FOLDER: /usr/local/airflow/analytics/dags/
          NAMESPACE: testing
          IN_CLUSTER: "False"
          GOOGLE_APPLICATION_CREDENTIALS: /root/gcp_service_creds.json
          GIT_BRANCH: ${GIT_BRANCH}
        command: bash -c "airflow webserver"
        volumes:
          - type: bind
            source: ${KUBECONFIG}
            target: /root/.kube/config
          - type: bind
            source: ${GOOGLE_APPLICATION_CREDENTIALS}
            target: /root/gcp_service_creds.json
            read_only: True
          - type: volume
            source: airflow_logs
            target: /usr/local/airflow/logs
          - type: bind
            source: .
            target: /usr/local/airflow/analytics
            read_only: True

    scheduler:
        image: registry.gitlab.com/gitlab-data/data-image/airflow-image:latest
        restart: "no"
        ports:
          - "8793:8793"
        depends_on:
          - proxy
        environment:
          AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
          AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
          AIRFLOW__CORE__DAGS_FOLDER: /usr/local/airflow/analytics/dags/
          NAMESPACE: testing
          IN_CLUSTER: "False"
          GOOGLE_APPLICATION_CREDENTIALS: /root/gcp_service_creds.json
          GIT_BRANCH: ${GIT_BRANCH}
        command: bash -c "airflow scheduler"
        volumes:
          - type: bind
            source: ${KUBECONFIG}
            target: /root/.kube/config
          - type: bind
            source: ${GOOGLE_APPLICATION_CREDENTIALS}
            target: /root/gcp_service_creds.json
            read_only: True
          - type: volume
            source: airflow_logs
            target: /usr/local/airflow/logs
          - type: bind
            source: .
            target: /usr/local/airflow/analytics
            read_only: True

    proxy:
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=gitlab-analysis:us-west1:analytics=tcp:0.0.0.0:5432",
                  "-credential_file=/root/gcp_service_creds.json"]
        ports:
          - 5432:5432
        volumes:
          - type: bind
            source: ${GOOGLE_APPLICATION_CREDENTIALS}
            target: /root/gcp_service_creds.json
            read_only: True


volumes:
  airflow_logs:
